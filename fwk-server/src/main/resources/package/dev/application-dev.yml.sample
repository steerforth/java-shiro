project: fwk-server

steer:
  spring-session-open: false

spring:
  datasource:
    name: mysql_${project}
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #基本属性
      url: jdbc:mysql://127.0.0.1:3306/${project}?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=true
      username: root
      password: root
      driver-class-name: com.mysql.jdbc.Driver
      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validationQuery: SELECT 1
      # 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validationQueryTimeout: 10
      #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initialSize: 10
      #最大连接池数量
      maxActive: 20
      #最小连接池数量
      minIdle: 10
      #\获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      max-wait: 10000
      #连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 180000
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnBorrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testWhileIdle: true
      #有两个含义：
      # 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。 单位毫秒
      # 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      #是否共享 prepared 语句，也就是是否两次请求相同的语句而不会关闭对相同底层 prepared 语句的使用。
      share-prepared-statements: true
      #插件：统计、防注入
      #filters: stat,wall

  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  messages:
    encoding: UTF-8
  banner:
    charset: UTF-8
  mvc:
    view:
      prefix: /pages
  jpa:
    hibernate:
      ddl-auto: update #新增数据库链接必备的参数
    show-sql: false
  servlet:
    multipart:
      max-request-size: 100MB
      max-file-size: 100MB

mybatis-plus:
  mapper-locations: classpath:/mapper/**Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.steer.phoniex.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 3
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 9
    logic-not-delete-value: 0
    #自定义SQL注入器
#    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
#    meta-object-handler: com.dcim.phoniex.common.handler.MyMetaObjectHandler
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

logging:
  config: classpath:logback-${profile}.xml

server:
  port: 5050
  max-http-header-size: 10240
  servlet:
    context-path: /
  tomcat:
    uri-encoding: utf-8

###beetl###
beetl:
  #热加载beetl模板，开发时候用
  resource-auto-check: true
  delimiter-statement-start: \@
  delimiter-statement-end: null
  beetl.resource-tagroot: common/tags
  resource-tagsuffix: tag


####kafka配置####
kafka:
  bootstrap-server: 127.0.0.1:9092
  group: ${project}
  timeout: 30000
  poll-time: 100
  producer:
    retries: 0
    acks: all
    batch-size: 16384
    buffer-memory: 33554432
    linger-ms: 1
    max-block-ms: 1000
  consumer:
    enable-auto-commit: false
    auto-commit-interval: 100
    auto-offset-reset: latest
    max-poll-interval-ms: 480000
    max-poll-records: 300
####redis配置####
jedis:
  #single单机,pool线程池,cluster集群模式
  mode: pool
  #集群节点集合
  cluster-nodes:
  - 127.0.0.1:6379
  - 182.18.1.100:7002
  - 182.18.1.101:7003
  - 182.18.1.101:7004
  - 182.18.1.102:7005
  - 182.18.1.102:7006
  cluster-node-timeout: 12000
  connection-timeout: 2000
  so-timeout: 1000
  max-attempts: 1
  pool:
    max-total: 35
    max-idle: 15
    max-wait: 100000
    test-on-borrow: true